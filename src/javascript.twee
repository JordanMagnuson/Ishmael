/% --------------------------------------------------------------------------------------
 % SPECIALLY-TAGGED PASSAGE FOR PLACING JAVASCRIPT TO BE RUN AT STORY INITIALIZATION
 % See http://www.motoslave.net/sugarcube/2/docs/special-names.html#special-tags
 % -------------------------------------------------------------------------------------%/

:: javascript [script]

/*********************************************************************
 * SUGARCUBE 2 CONFIGURATION
 * See http://www.motoslave.net/sugarcube/2/docs/config-object.html
 *********************************************************************/
config.ui.stowBarInitially = true; // the UI bar will start stowed (shut)

/*********************************************************************
 * INITIALIZE VARIABLES
 *********************************************************************/
window.upDownCount = 0;

window.putDownEndingPassages = Array(
	"put_down_story_1",
	"put_down_story_2",
	"put_down_story_3"
);

// Note that in-game variables referenced via $foo can be set in javascript via:
// State.variables.foo = 'bar';

/*********************************************************************
 * DOM MODIFICATIONS
 *********************************************************************/

// Add a div beneath body that we will use to handle our puppets.
$('body').prepend('<div id="puppetsheet"></div>');
$('body').prepend('<div id="puppetbg-container"><div id="puppetbg"></div></div>');
$("#puppetsheet").hide();

// Add the puppets.
$('#puppetbg').append('<img class="puppet" id="puppet-boy" src="assets/puppets/puppet_boy.png" />');
$('#puppetbg').append('<img class="puppet" id="puppet-boy-rock" src="assets/puppets/puppet_boy_rock.png" />');
$('#puppetbg').append('<img class="puppet" id="puppet-father" src="assets/puppets/puppet_father.png" />');
$('#puppetbg').append('<img class="puppet" id="puppet-mother" src="assets/puppets/puppet_mother.png" />');
$('#puppetbg').append('<img class="puppet" id="puppet-house" src="assets/puppets/puppet_house.png" />');
$('#puppetbg').append('<img class="puppet" id="puppet-hospital" src="assets/puppets/puppet_hospital.png" />');
$('#puppetbg').append('<img class="puppet" id="puppet-wire" src="assets/puppets/puppet_wire.png" />');
$('#puppetbg').append('<img class="puppet" id="puppet-soldier" src="assets/puppets/puppet_soldier.png" />');
$('#puppetbg').append('<img class="puppet" id="puppet-bulldozer" src="assets/puppets/puppet_bulldozer.png" />');
$('#puppetbg').append('<img class="puppet" id="puppet-question" src="assets/puppets/puppet_question.png" />');
$(".puppet").hide();

// Add ground.
$('body').prepend('<div class="background-image" id="ground"></div>');

// Add the blood overlay.
$('body').prepend('<div class="background-image" id="blood-overlay"></div>');

// Add cover image.
$('body').prepend('<div class="background-image" id="cover-image"></div>');

// Resize the puppet background after scene display.
// (The puppet background should take up the space between the top of the screen and the passage.)
postdisplay.resizePuppetBG = function() {
	if (tags().contains('puppet-show')) {
		$('#puppetbg-container').height(function(index, height) {
		    return $('.passage').offset().top;
		});
	}
}

// Resize the puppet background if the screen changes size.
// (The puppet background should take up the space between the top of the screen and the passage.)
window.onresize = function() {
	if (tags().contains('puppet-show')) {
		$('#puppetbg-container').height(function(index, height) {
		    return $('.passage').offset().top;
		});
	}
}

/*********************************************************************
 * INITIALIZE SOUND OBJECTS (these make use of the howler.js library)
 *********************************************************************/
window.sndCelebration = new Howl({
	src: ['assets/sounds/209982__yuval__distant-turkish-wedding.mp3'],
	loop: true,
	volume: 0.3
});

window.sndHollering = new Howl({
	src: ['assets/sounds/17343__audiblepie-com__welcome-scream.mp3'],
	loop: true,
	volume: 0.1
});

window.sndShouting = new Howl({
	src: ['assets/sounds/101871__dickblox__crowd-shouting.mp3'],
	loop: true,
	volume: 1
});

window.sndChildrenCheering = new Howl({
	src: ['assets/sounds/346814__robinhood76__06684-children-hooray-joy-shout.mp3'],
	loop: false,
	volume: 1
});

window.sndMachinegunLoop = new Howl({
	src: ['assets/sounds/101961__cgeffex__heavy-machine-gun.mp3'],
	loop: true,
	volume: 0.5
});

window.sndBreathing = new Howl({
	src: ['assets/sounds/54776__bevangoldswain__heavy-breathing-off-mic-loop.mp3'],
	loop: true,
	volume: 0.5
});

window.sndHeartbeat = new Howl({
	src: ['assets/sounds/250845__niedec__heartbeat.mp3'],
	loop: true,
	volume: 0.5
});

window.sndWar = new Howl({
	src: ['assets/sounds/96533__omar-alvarado__modern-day-war_01.mp3'],
	loop: false,
	volume: 0.6
});

window.sndExplosion = new Howl({
	src: ['assets/sounds/259300__unfa__huge-explosion.mp3'],
	loop: false,
	volume: 1
});


/*********************************************************************
 * PRELOAD IMAGES
 *********************************************************************/

// Violent images.
window.violentImageArray = Array(
	"14107469954_b84973bf28_o.jpg",
	"2190176602_9c4e70b78b.jpg",
	"3298081311_d75e5d5c1f_o.jpg",
	"Another_injury_caused_by_the_bombing_of_Israeli_Air_Forces_over_Gaza_Strip,_reached_the_hospital_unconscious.jpg",
	"Chemical_burns_follwong_Israeli_bombings1.jpg",
	"Fatally_wounded_Israeli_school_boy.jpg",
	"Flickr_-_Israel_Defense_Forces_-_Bil-in_Riot,_Jan_2011_6.jpg",
	"Gazaday14.jpg",
	"n721725932_1613535_8023.jpg",
	"Near_Beit_El_-_north_of_Ramallah_10.10.2015_10.jpg",
	"Near_Beit_El_-_north_of_Ramallah_10.10.jpg",
	"Palestinian_Demonstrator_picks_Tear_gas_grenade_to_throw_back_Kafr_Qaddum_August_2014_2.jpg",
	"Palestinian_militant_with_rifle.jpg"
);	
for(var i = violentImageArray.length - 1; i >= 0; i--){
	var preloadImage = violentImageArray[i];
	$('body').prepend('<div class="preload-image" id="preload-image-' + i + '" style="background-image: url(assets/photos/violence/' + preloadImage + '"></div>');
}

// Face images.
window.facesImageArray = Array(
	"3202880684_763846e8f4_o.jpg",
	"3286208380_176e6f164f_o.jpg",
	"3286231988_ae66a85935_o.jpg",
	"3286249224_6e31fba579_o.jpg",
	"3286256664_0fac09c4e0_o.jpg",
	"3286467903_1cf6aba0b7_o.jpg",
	"4742026797_dbfb4c57e0_o.jpg",
	"4991232884_ac841ee310_o.jpg",
	"5513283076_05ec4fc98b_o.jpg",
	"Shaymaa_al-Masri_five_years_old_at_a-Shifaa_Hospital_Gaza.jpg"
);
for(var i = facesImageArray.length - 1; i >= 0; i--){
	var preloadImage = facesImageArray[i];
	$('body').prepend('<div class="preload-image" id="preload-image-' + i + '" style="background-image: url(assets/photos/faces/' + preloadImage + '"></div>');
}


/*********************************************************************
 * UTILITY FUNCTIONS
 *********************************************************************/
window.holdGunUp = function(element) {		
	if (!$(element).hasClass('clickable')) {
		console.log('unclickable');
		return false;
	}

	// Track where the gun is.
	upDownCount += 1;

	// Game end.
	if (upDownCount >= 8) {
		$('#the-choice').remove();
		$('#gun').remove();
		sndWar.stop();
		sndBreathing.stop();
		sndHeartbeat.stop();
		sndCelebration.stop();
		sndShouting.stop();
		sndMachinegunLoop.stop();
		//sndExplosion.play();
		State.play("Story End");
		return false;
	}	     

	// Show the end story passages.
	if (upDownCount == 1) {
		//$('#the-choice').finish().hide();
		State.play("hold_up_story_1");
	}
	else if (upDownCount == 2) {
		//$('#the-choice').finish().hide();
		State.play("hold_up_story_2");
	}	
	else if (upDownCount == 4) {
		//$('#the-choice').finish().hide();
		State.play("hold_up_story_3");
	}	
	else if (upDownCount == 6) {
		//$('#the-choice').finish().hide();
		State.play("hold_up_story_4");
	}	

	// Move the the choice text and gun up (use % from top, so that movement is relative to window height)
	$('#the-choice').animate({ top : "-=5%" }, 500, 'swing');
	$('#gun').animate({ top : "-=12%" }, 500, 'swing');	

	// Show an image.
	if (upDownCount >= 4) {
		// Initialize image array.
		if (typeof violentImageArrayCopy == 'undefined' || violentImageArrayCopy.length < 1) {
			console.log('reinitialize array');
			window.violentImageArrayCopy = violentImageArray.slice(0);
		}
		console.log(violentImageArrayCopy);

		// Get a random image from the array.
		var randomImage = violentImageArrayCopy.splice(Math.floor(Math.random()*violentImageArrayCopy.length), 1);
		console.log(randomImage);

		// Move any existing background images down on the z-index, so that the new one will be on top.
		$('.background-image').css('z-index', 19);
		
		// Prepend the image to the body with a random div id so that we can access it / fade it out. 
		var randomID = idGenerator();
		$('body').prepend('<div class="background-image" id="' + randomID + '" style="background-image: url(assets/photos/violence/' + randomImage + '"></div>');
		$('#' + randomID).fadeOut(5000, function() { $(this).remove(); });

		// Fade link text out and prevent clicking temporarily. 
		/*
		$('#the-choice').finish().hide().fadeIn(5000);
		$('.choice').removeClass('clickable');
		setTimeout(function() { 
			$('.choice').addClass('clickable');
		}, 2000);		
		*/

		// War sounds.
		sndWar.play();   		
	}

	// Increase blood overlay.
	var bloodOverlayOpacity = $('#blood-overlay').css('opacity');
	bloodOverlayOpacity = Number(bloodOverlayOpacity)
	if (bloodOverlayOpacity < 1) {
		bloodOverlayOpacity = bloodOverlayOpacity + 0.1;
		console.log('bloodOverlayOpacity: ' + bloodOverlayOpacity);
		//$('#blood-overlay').css('opacity', bloodOverlayOpacity);
		$('#blood-overlay').animate({ opacity : bloodOverlayOpacity }, 500, 'swing');
	}

	// Increase breathing and heartbeat volume.
    var currentVol = sndBreathing.volume();
    currentVol += .1;
    if (currentVol <= 1)
    	sndBreathing.volume(currentVol);
    var currentVol = sndHeartbeat.volume();
    currentVol += .1;
    if (currentVol <= 1)
    	sndHeartbeat.volume(currentVol);		
};

window.putGunDown = function(element) {		
	if (!$(element).hasClass('clickable')) {
		console.log('unclickable');
		return false;
	}

	// Track where the gun is.
	upDownCount -= 1;
	
	// Show the end story passages as we go down.
	if (upDownCount == -2) {
		//$('#the-choice').finish().hide();
		State.play("put_down_story_1");
	}	
	else if (upDownCount == -4) {
		//$('#the-choice').finish().hide();
		State.play("put_down_story_2");
	}	
	else if (upDownCount == -6) {
		//$('#the-choice').finish().hide();
		State.play("put_down_story_3");
	}		
	
	// Move the whole passage down (use % from top, so that movement is relative to window height).
	if (upDownCount > -7) {
		$('#the-choice').animate({ top : "+=5%" }, 500, 'swing');
		$('#gun').animate({ top : "+=12%" }, 500, 'swing');			
	}	
	// Last stop: won't go any further.
	else {
		// Pop back up.
		$('#the-choice').animate({ top : "+=5%" }, 750, 'swing').animate({ top : "-=5%" }, 250, 'swing')
		upDownCount += 1;

		// Show a random end sentence.
		if (typeof putDownEndingPassagesCopy == 'undefined' || putDownEndingPassagesCopy.length < 1) {
			window.putDownEndingPassagesCopy = putDownEndingPassages.slice(0);
		}
		var randomPassage = putDownEndingPassagesCopy.splice(Math.floor(Math.random()*putDownEndingPassagesCopy.length), 1);
		State.play(randomPassage[0]);
	}	 

	// Show an image.
	if (upDownCount <= -4) {
		// Initialize image array.
		if (typeof facesImageArrayCopy == 'undefined' || facesImageArrayCopy.length < 1) {
			console.log('reinitialize array');
			window.facesImageArrayCopy = facesImageArray.slice(0);
		}
		console.log(facesImageArrayCopy);

		// Get a random image from the array.
		var randomImage = facesImageArrayCopy.splice(Math.floor(Math.random()*facesImageArrayCopy.length), 1);
		console.log(randomImage);

		// Move any existing background images down on the z-index, so that the new one will be on top.
		$('.background-image').css('z-index', 19);
		
		// Prepend the image to the body with a random div id so that we can access it / fade it out. 
		var randomID = idGenerator();
		$('body').prepend('<div class="background-image" id="' + randomID + '" style="background-image: url(assets/photos/faces/' + randomImage + '"></div>');
		$('#' + randomID).fadeOut(5000, function() { $(this).remove(); });

		// Fade link text out and prevent clicking temporarily. 
		/*
		$('#the-choice').finish().hide().fadeIn(5000);
		$('.choice').removeClass('clickable');
		setTimeout(function() { 
			$('.choice').addClass('clickable');
		}, 2000);	
		*/

		// Crowd shouting.
		sndShouting.fade(1, 0.1, 5000);			
	}	

	// Increase breathing and heartbeat volume.
    var currentVol = sndBreathing.volume();
    currentVol += .1;
    if (currentVol <= 1)
    	sndBreathing.volume(currentVol);
    var currentVol = sndHeartbeat.volume();
    currentVol += .1;
    if (currentVol <= 1)
    	sndHeartbeat.volume(currentVol);	    

	// Stop war sounds.
	sndWar.stop();		
};

/*
 * Generate a random ID (for a div)
 */
window.idGenerator = function() {
    var S4 = function() {
       return (((1+Math.random())*0x10000)|0).toString(16).substring(1);
    };
    return (S4()+S4()+"-"+S4()+"-"+S4()+"-"+S4()+"-"+S4()+S4()+S4());
}

/**
 * Returns a random integer between min (inclusive) and max (inclusive)
 * Using Math.round() will give you a non-uniform distribution!
 */
window.getRandomInt = function(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

/**
 * Returns the div id for a Passage based on passage title.
 */
window.getDivID = function(passageTitle) {
    var divID = passageTitle.replace(/[.,\/#!$%\^&\*;:{}=\-_`~()]/g,"-");
    divID = divID.toLowerCase();
    divID = "passage-" + divID;
    return divID;
}

/**
 * jQuery plugin for animating rotation.
 * See http://stackoverflow.com/questions/15191058/css-rotation-cross-browser-with-jquery-animate
 */ 
$.fn.animateRotate = function(angle, duration, easing, complete) {
  var args = $.speed(duration, easing, complete);
  var step = args.step;
  return this.each(function(i, e) {
    args.complete = $.proxy(args.complete, e);
    args.step = function(now) {
      $.style(e, 'transform', 'rotate(' + now + 'deg)');
      if (step) return step.apply(e, arguments);
    };

    $({deg: 0}).animate({deg: angle}, args);
  });
};

/**
 * Trigger browser fullscreen mode. See twinery.org/forum/discussion/comment/15038
 */ 
window.fullscreen = function(enter) {
    var d = document,
        i = -1, a;
    if (typeof enter != "boolean" && !enter) {
        enter = !(d.fullscreenElement || d.mozFullScreenElement || d.webkitFullscreenElement || d.msFullscreenElement);
    }
    a = ["requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen"];
    enter && (d = d.documentElement);
    while(i++ < 3) {
        if (d[a[i]]) {
            d[a[i]]();
            break;
        }
    }
}